<!DOCTYPE HTML>

<html>

 <head>

   <link rel="stylesheet" href="https://cdn.leafletjs.com/leaflet-0.7.1/leaflet.css" />
   <script src="https://cdn.leafletjs.com/leaflet-0.7.1/leaflet.js"></script>
   <script src= schools.js> </script>
   <script src= hospital.js> </script>
   <script src= yadgir_dist.js> </script>
   <script src= lip.js> </script>
   <script src="https://leaflet.github.io/Leaflet.markercluster/dist/leaflet.markercluster-src.js"></script>
   <link rel="stylesheet" type="text/css" href="https://leaflet.github.io/Leaflet.markercluster/dist/MarkerCluster.css">
   <link rel="stylesheet" type="text/css" href="https://leaflet.github.io/Leaflet.markercluster/dist/MarkerCluster.Default.css">

   <style type="text/css">
   #map {
   height: 600px;
   width: 100%;
  }
</style>

</head>

<body>
<div id="map"></div>

<script  type="text/javascript">
var yadgir_ll = L.latLng(16.7537,77.1482);


  var osmUrl='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
  var osmAttrib='Map data Â© OpenStreetMap contributors';
  var osm = new L.TileLayer(osmUrl, {minZoom: 8, maxZoom: 16, attribution: osmAttrib});    

  var schoolIcon = L.icon({
        iconUrl: 'school.png',
        iconSize:     [23, 28], // size of the icon
        iconAnchor:   [8, 8], // point of the icon which will correspond to marker's location
        popupAnchor:  [0,-9] // point from which the popup should open relative to the iconAnchor
    });

  var hospitalIcon = L.icon({
      iconUrl: 'hospital.png',
      iconSize:     [32, 37], // size of the icon
      iconAnchor:   [16, 16], // point of the icon which will correspond to marker's location
      popupAnchor:  [0,-9] // point from which the popup should open relative to the iconAnchor
  });

  var schoolCluster = new L.MarkerClusterGroup(); //for clustering

  var schoolLayer = L.geoJson(schools, { pointToLayer: function(feature , latlng){ return L.marker(latlng, { icon:schoolIcon});},
  onEachFeature: createPopup
  });

  schoolLayer.addTo(schoolCluster); //for clustering

  var hospitalLayer = L.geoJson(hospital, { pointToLayer: function(feature , latlng){ return L.marker(latlng, { icon:hospitalIcon});},
  onEachFeature: createPopup
  });
  
  var lipLayer = L.geoJson(lip, { pointToLayer: function(feature , latlng){ return L.marker(latlng, { icon:schoolIcon});},
  onEachFeature: createPopup
  });

  function createPopup (feature, layer) {
          layer.bindPopup(feature.properties['name']).openPopup();
  };

  var map = L.map('map', {
          layers: [osm]
  }
  ).setView(yadgir_ll,10);

  var baseMaps = {
      "OpenStreetMap": osm
  };
  var overlays = {
  'Schools': schoolCluster,	//replaced schoolLayer with schoolCluster for clustering
  'Hospitals': hospitalLayer,
  'LIP Centers': lipLayer
  };
  
  L.control.layers(baseMaps,overlays).addTo(map);
  
  L.geoJson( yadgir_dist, {
    style: function (feature) {
        return { opacity: 0.4, fillOpacity: 0, fillColor: "#0f0" };
    }}).addTo(map);

</script>
</body>
</html>
