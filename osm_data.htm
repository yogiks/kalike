<!DOCTYPE HTML>

<html>

 <head>

   <link rel="stylesheet" href="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.css" />
   <script src="http://cdn.leafletjs.com/leaflet-0.7.1/leaflet.js"></script>
   <script src= schools.js> </script>
   <script src= hospital.js> </script>
   <style type="text/css">
   
   #map {
   height: 600px;
   width: 100%;
  }
</style>
</head>

<body>
<div id="map"></div>

<script  type="text/javascript">
var yadgir = L.latLng(16.7537,77.1482);
var ajaxRequest;
var plotlist;
var plotlayers=[];
//var map = L.map('map').setView([yadgir], 13);

  var osmUrl='http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png';
  var osmAttrib='Map data Â© OpenStreetMap contributors';
  var osm = new L.TileLayer(osmUrl, {minZoom: 10, maxZoom: 15, attribution: osmAttrib});    

  var schoolIcon = L.icon({
        iconUrl: 'school.png',
        iconSize:     [16, 16], // size of the icon
        iconAnchor:   [8, 8], // point of the icon which will correspond to marker's location
        popupAnchor:  [0,-9] // point from which the popup should open relative to the iconAnchor
    });

  var hospitalIcon = L.icon({
      iconUrl: 'hospital.png',
      iconSize:     [24, 24], // size of the icon
      iconAnchor:   [16, 16], // point of the icon which will correspond to marker's location
      popupAnchor:  [0,-9] // point from which the popup should open relative to the iconAnchor
  });

  var schoolLayer = L.geoJson(schools, { pointToLayer: function(feature , latlng){ return L.marker(latlng, { icon:schoolIcon});},
  onEachFeature: createPopup
  });

  var hospitalLayer = L.geoJson(hospital, { pointToLayer: function(feature , latlng){ return L.marker(latlng, { icon:hospitalIcon});},
  onEachFeature: createPopup
  });

  function createPopup (feature, layer) {
          layer.bindPopup(feature.properties['name']).openPopup();
  };

  var map = L.map('map', {
          layers: [osm]
  }
  ).setView(yadgir,13);

  var baseMaps = {
      "OpenStreetMap": osm
  };
  var overlays = {
  'Schools': schoolLayer,
  'Hospitals': hospitalLayer
  };

  L.control.layers(baseMaps,overlays).addTo(map);

</script>
</body>
</html>
